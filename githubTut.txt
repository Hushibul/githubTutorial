//Git is a version control system.
-->easily recover files
-->rollback in previously working state

//Git three stage architechture
-->working directory = local folders
-->staging area = files you want to commit
-->git directory(repository)

//File status life cycle 
-->untracked
-->unmodified
-->modified
-->staged

//touch command = this is a linux command which create named files.


//Git config
git config --global user.name "DarkShadow"
git config --global user.email "random@gmail.com"

//Starting git//

//To check status of repository 
git status

//To make a folder git repository
git init

//To take  all your file in the staging area
git add --a 
git add .
git add file_name.txt

//To remove a file from staging area 
git restore --staged file_name.txt 

//To commmit in git with message
git commit -m "message"

//To delete every thing from git
rm -rf .git 

//To clone a git repository
git clone http://url().git //copy the link from github 


//git ignore
.gitignore file ignored by git the files mention inside .gitignore
*.log -- inside gitignore ignores all the log files. log is an example. 
dir/ -- inside gitignore ignores folder mentioned like dir/.

//To see the comparison between working directory and staging area 
git diff 

//Compares previous commit with the new staging area 
git diff --staged 

//Skipping the staging area 
git commit -a -m 

//To remove a file
git rm something.txt

//To rename a file 
git mv first_name.txt chanaged_name.txt

//To make a file untracked 
git rm --cached random.txt 


//git log using

//to see the different in git commit in git log 
git log -p 
git log -p -3//last 3 commits 

//show the difference in short
git log --stat 

//show every commit in one line 
git log --pretty=oneline 

//gives you organized information on commit in short like author and message
git log --pretty=short 

//gives you organized information on commit in short like author and commit and message
git log --pretty=full 

//TO see git log of specific timeline 
git log --since=2.months/years/weeks

//To change commit from before 
git commit --amend 
i for editing, esc for escape, :wq 


//To take a file in the stage of previous commit 
git checkout -- file_name.txt  

//To take a file in the stage of previous commit 
git checkout -f 

//To add a git remote 
git remote add origin https://github.com/Hushibul/githubTutorial.git 

//TO check if you have a remote 
git remote 

//To push into the repository 
git push -u origin master 
 
//To push something into the repository we need to give some permission. In the case of this repository we gave ssh permission.
//To create ssh key 
$ ssh-keygen -t ed25519 -C "nayeemninz786@gmail.com"

//To check ssh agent 
 eval `ssh-agent -s`

//To connect key with our device 
 ssh-add ~/.ssh/id_ed25519

//To create id for github 
 tail ~/.ssh/id_ed25519.pub

//git alius: We can make some shorter commands instead of bigger commands 
git config --global alius.st status 
git status = git st 






